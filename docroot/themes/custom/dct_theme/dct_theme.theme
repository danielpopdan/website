<?php

/**
 * @file
 * Contains hook implementations.
 */

use Drupal\dct_sessions\Service\UserSessions;

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function dct_theme_preprocess_page(&$variables) {
  if ($variables['is_front']) {
    $variables['#attached']['library'][] = 'dct_theme/parallax';
  }
}

/**
 * Implements hook_preprocess_HOOK() for paragraph templates.
 */
function dct_theme_preprocess_paragraph(&$variables) {
  if ($variables['elements']['#paragraph']->type->getValue()[0]['target_id'] == 'image_slider_paragraph') {
    $variables['#attached']['library'][] = 'dct_theme/image-slider';
    $variables['#attached']['library'][] = 'dct_theme/zoom';
  }
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function dct_theme_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  // Add suggestions for forms.
  if (isset($variables['element']['#id']) && isset($variables['element']['#type']) && $variables['element']['#type'] == 'form') {
    $suggestions[] = $hook . '__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

/**
 * Implements hook_preprocess_node().
 */
function dct_theme_preprocess_node(&$variables) {
  switch ($variables['elements']['#node']->bundle()) {
    case 'page':
      $variables['#attached']['library'][] = 'dct_theme/match_height';
      break;

    default:
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dct_theme_preprocess_user(&$variables) {
  $current_user = Drupal::currentUser();
  $user = $variables['user'];

  $variables['has_user_access'] = $user->id() == $current_user->id() ? TRUE : FALSE;
  $variables['content']['roles'] = UserSessions::getPublicUserRoles($user);
}

/**
 * Implements dct_theme_preprocess_field_multiple_value_form().
 */
function dct_theme_preprocess_field_multiple_value_form(&$variables) {
  // Sets wrappers to the address field on checkout.
  if ($variables['element']['#id'] == 'edit-payment-information-billing-information-address') {
    unset($variables['elements'][0]['address']['langcode']);
    unset($variables['elements'][0]['address']['postal_code']);
    unset($variables['elements'][0]['address']['organization']);
    unset($variables['elements'][0]['address']['container0']);
    unset($variables['elements'][0]['address']['container4']);
    $variables['elements'][0]['address']['fields'] = [
      '#prefix' => '<div class="form-two-column">',
      '#suffix' => '</div>',
    ];
    $fields = [
      'given_name',
      'family_name',
      'address_line1',
      'address_line2',
      'country_code',
      'locality',
    ];
    foreach ($fields as $weight => $field) {
      $variables['elements'][0]['address']['fields'][$field] = $variables['elements'][0]['address'][$field];
      $variables['elements'][0]['address']['fields'][$field]['#weight'] = $weight;
      $variables['elements'][0]['address']['fields'][$field]['#prefix'] = '<div class="form-wrapper">';
      $variables['elements'][0]['address']['fields'][$field]['#suffix'] = '</div>';
      unset($variables['elements'][0]['address'][$field]);
    }
    // Unset ajax from country select.
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#ajax']);
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#ajax_processed']);
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#value_callback']);
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#process']);
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#attached']['drupalSettings']['ajax']);
    unset($variables['elements'][0]['address']['fields']['country_code']['country_code']['#attached']['drupalSettings']['ajaxTrustedUrl']);
  }
}
