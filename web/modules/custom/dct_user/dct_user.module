<?php

/**
 * @file
 * Contains hook implementations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_view().
 */
function dct_user_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->getEntityTypeId() == 'user' && $view_mode == 'teaser') {
    $build['name'] = [
      '#markup' => $entity->get('field_first_name')->value . ' ' . $entity->get('field_last_name')->value,
    ];
  }
}

/**
 * Implements hook_theme().
 */
function dct_user_theme() {
  return [
    'user_register_form' => [
      'render element' => 'form',
    ],
    'user_form' => [
      'render element' => 'form',
    ],
    'contact_message_session_proposal_form_form' => [
      'render element' => 'form',
    ],
    'dct_user_reset_password' => [
      'variables' => [
        'first_name' => NULL,
        'last_name' => NULL,
        'link' => NULL,
      ],
    ],
    'dct_user_register' => [
      'variables' => [
        'first_name' => NULL,
        'last_name' => NULL,
      ],
    ],
    'dct_user_not_authenticated_error' => [
      'variables' => [
        'links' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function dct_user_mail($key, &$message, $params) {
  switch ($key) {
    case 'basic':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['headers']['Content-Type'] = 'text/html';
      $message['subject'] = $params['subject'];
      $message['body'][0] = render($params['body']);
      break;

    case 'text':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['headers']['Content-Type'] = 'text/plain';
      $message['subject'] = $params['subject'];
      $message['body'][0] = render($params['body']);
      break;

    default:
  }
}

/**
 * Implements hook mail alter.
 */
function dct_user_mail_alter(&$message) {
  switch ($message['id']) {
    case 'user_password_reset':
      dct_user_user_password_reset($message);
      break;

//    case 'user_register_no_approval_required':
//      dct_user_user_register($message);
//      break;

    default:
  }
}

/**
 * Implements reset password template.
 */
function dct_user_user_password_reset(&$message) {
  $user = $message['params']['account'];
  $body = [
    '#theme' => 'dct_user_reset_password',
    '#first_name' => $user->get('field_first_name')->value,
    '#last_name' => $user->get('field_last_name')->value,
    '#link' => user_pass_reset_url($user),
  ];

  $message['headers']['Content-Type'] = 'text/html';
  $message['body'][0] = render($body);
}

/**
 * Implements welcome email template.
 */
function dct_user_user_register(&$message) {
  $user = $message['params']['account'];
  $body = [
    '#theme' => 'dct_user_register',
    '#first_name' => $user->get('field_first_name')->value,
    '#last_name' => $user->get('field_last_name')->value,
  ];

  $message['headers']['Content-Type'] = 'text/html';
  $message['body'][0] = render($body);
}
